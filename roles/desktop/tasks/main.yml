---
# tasks file for desktop
- name: Update package cache if required
  when: "'Debian' in ansible_os_family"
  ansible.builtin.apt:
    cache_valid_time: 86400
    update_cache: true

- name: NVIDIA drivers and CUDA
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - nvidia/{{ ansible_distribution }}.yml
      skip: true

- name: VirtualGL
  when: desktop_virtualgl_enabled
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - virtualgl/{{ ansible_os_family }}.yml
      skip: true

# https://snapcraft.io/docs/installing-snapd
- name: Install
  ansible.builtin.package:
    name:
      - default-jdk
      - dnsutils
      - filezilla
      - git
      - libpam-google-authenticator
      - libqrencode4
      - lmod
      - make
      - podman
      - ubuntu-mate-desktop
      - s3fs
      - snapd
      - vlc
      - xrdp
    state: present

- name: Authd
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - authd/{{ ansible_distribution }}.yml
      skip: true

- name: Enable RDP service
  ansible.builtin.service:
    enabled: "{{ desktop_rdp_enabled }}"
    name: "{{ item }}"
    state: "{{ 'started' if desktop_rdp_enabled else 'stopped' }}"
  with_items:
    - xrdp.service
    - xrdp-sesman.service

- name: Install snaps (classic)
  community.general.snap:
    classic: true
    name: "{{ item }}"
    state: present
  with_items:
    - aws-cli
    - helm
    - kubectl
    - lxd

- name: Unattended Upgrades
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - patching/{{ ansible_distribution }}.yml
      skip: true

- name: Gconf GNOME
  ansible.builtin.include_tasks: gnome/configure.yml

- name: Conky
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - conky/{{ ansible_os_family }}.yml
      skip: true

- name: Configure conky
  ansible.builtin.include_tasks: conky/configure.yml

- name: Install NICE DCV remote desktop
  when: desktop_nice_dcv_enabled
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - nice-dcv/{{ ansible_distribution }}.yml
      skip: true

- name: Set default target
  ansible.builtin.file:
    src: "/lib/systemd/system/{{ desktop_target_default }}"
    dest: /etc/systemd/system/default.target
    state: link
  notify:
    - Reload systemd
    - Isolate target
