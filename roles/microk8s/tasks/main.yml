---
# tasks file for microk8s
- name: microk8s install
  ansible.builtin.command:
    cmd: snap install microk8s --classic
    creates: /snap/microk8s

- name: microk8s status
  ansible.builtin.shell:
    cmd: microk8s status --format short --wait-ready --timeout 60
  register: microk8s_status

- name: /etc/profile.d/microk8s.sh
  ansible.builtin.copy:
    dest: /etc/profile.d/microk8s.sh
    group: root
    mode: "0644"
    owner: root
    src: files/profile.sh

- block:
  - name: metallb range
    ansible.builtin.script:
      cmd: files/metallb-range.py "{{ microk8s_metallb_range }}"
      executable: "{{ ansible_python.executable }}"
    register: metallb_range
  - ansible.builtin.debug:
      var: metallb_range.stdout
  when:
    - "microk8s_enable|select('search','^metallb$')|length>0"
    - "microk8s_status.stdout_lines|select('search','core/metallb: disabled')|length>0"

- name: microk8s enable ...
  ansible.builtin.shell:
    cmd: |
      ADDON="{{ item }}"
      if [[ $ADDON == metallb* ]]; then
        [[ -z $METALLB ]] || ADDON="${METALLB}"
      fi
      microk8s enable ${ADDON}
  with_items:
    - "{{ microk8s_enable }}"
    - "{{ ((microk8s_hostpaths|length>0) and (microk8s_enable|select('search','hostpath-storage')|length==0))|ternary(['hostpath-storage'],[]) }}"
  when:
    - "microk8s_status.stdout_lines|select('search',('core/%s: disabled'|format((item|split(':'))[0])))|length>0"

- name: microk8s-hostpath storage class
  ansible.builtin.import_tasks: hostpath_provisioner.yml
  when:
    - "microk8s_hostpaths|length>0"

- name: local-storage class
  ansible.builtin.shell:
    cmd: |
      cat <<EOT |microk8s kubectl apply -f -
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: local-storage
      provisioner: kubernetes.io/no-provisioner
      reclaimPolicy: Delete
      volumeBindingMode: WaitForFirstConsumer
      EOT

- name: local-storage
  ansible.builtin.import_tasks: local-storage.yml
