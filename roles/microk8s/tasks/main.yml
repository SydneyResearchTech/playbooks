---
# tasks file for microk8s
#- name: microk8s install

- name: microk8s status
  ansible.builtin.shell:
    cmd: microk8s status --format short
  register: microk8s_status

- block:
  - name: metallb range
    ansible.builtin.script:
      cmd: files/metallb-range.py "{{ microk8s_metallb_range }}"
      executable: "{{ ansible_python.executable }}"
    register: metallb_range
  - ansible.builtin.debug:
      var: metallb_range.stdout
  when:
    - "microk8s_enable|select('search','^metallb$')|length>0"
    - "microk8s_status.stdout_lines|select('search','core/metallb: disabled')|length>0"

- name: microk8s enable
  ansible.builtin.shell:
    cmd: |
      ADDON="{{ item }}"
      if [[ $ADDON == metallb* ]]; then
        [[ -z $METALLB ]] || ADDON="${METALLB}"
      fi
      microk8s enable ${ADDON}
  with_items: "{{ microk8s_enable }}"
  when:
    - "microk8s_status.stdout_lines|select('search',('core/%s: disabled'|format((item|split(':'))[0])))|length>0"

- name: local-storage class
  ansible.builtin.shell:
    cmd: |
      cat <<EOT |microk8s kubectl apply -f -
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: local-storage
      provisioner: kubernetes.io/no-provisioner
      reclaimPolicy: Delete
      volumeBindingMode: WaitForFirstConsumer
      EOT

# https://www.freedesktop.org/software/systemd/man/latest/tmpfiles.d.html
- name: local-storage tmpfiles.d
  ansible.builtin.copy:
    content: |
      {% for i in microk8s_local_storage %}
      d {{ i.path }} 1777 root root {{ i.age|default('-',true) }}
      {% endfor %}
    dest: /etc/tmpfiles.d/microk8s-local-storage.conf
  notify:
    - create tmpfiles
