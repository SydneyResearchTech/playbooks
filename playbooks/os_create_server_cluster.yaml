---
# playbooks/os_microk8s.yaml
- name: OpenStack prep. for deployment
  hosts: localhost
  become: false
  connection: local
  force_handlers: true
  gather_facts: false
  vars:
    cloud: nci-er01
    cluster_name: nci-dev
    dev: true
    flux_dir: "{{ lookup('ansible.builtin.env', 'HOME') }}/flux"
    flux_enabled: false
    # https://docs.openstack.org/heat/latest/template_guide/environment.html
    os_env_paths: []
    os_role: _member_
    #stack_name: MUST be provided as parameter
    context: admin@er01.nci.sydney.edu.au

  handlers:
    - name: Cleanup tmpdir
      ansible.builtin.file:
        path: "{{ tmpdir.path }}"
        state: absent

  pre_tasks:
    - name: Assert
      ansible.builtin.assert:
        that:
          - stack_name is defined
        msg: "'stack_name' must be defined"

  tasks:
    - name: Set facts
      ansible.builtin.set_fact:
        infrastructure_path: "{{ flux_dir }}/infrastructure/overlays/{{ cluster_name }}"
        controller_path: "{{ flux_dir }}/infrastructure/overlays/{{ cluster_name }}/controller"

    - name: Create tmpdir
      ansible.builtin.tempfile:
        state: directory
      notify: Cleanup tmpdir
      register: tmpdir

    - name: Get hot files
      when: not dev
      ansible.builtin.get_url:
        dest: "{{ tmpdir.path }}"
        mode: "0644"
        url: https://raw.githubusercontent.com/SydneyResearchTech/cfn-templates/refs/heads/main/{{ item }}
      with_items:
        - env.hot.yaml
        - server.hot.yaml
        - server-asg.hot.yaml
    - name: Get hot files local
      when: dev
      ansible.builtin.copy:
        dest: "{{ tmpdir.path }}"
        mode: "0644"
        src: "{{ lookup('ansible.builtin.env', 'HOME') }}/cfn-templates/{{ item }}"
      with_items:
        - env.hot.yaml
        - server.hot.yaml
        - server-asg.hot.yaml

    - name: OpenStack stack environment
      ansible.builtin.copy:
        content: |
          parameter_defaults:
            volume_size: 20
            volume_type: Nirin2_Transaction
        dest: "{{ tmpdir.path }}/ansible.env.yaml"
        mode: "0644"

    - name: Deploy stack
      openstack.cloud.stack:
        cloud: "{{ cloud }}"
        environment:
          - "{{ tmpdir.path }}/env.hot.yaml"
          - "{{ tmpdir.path }}/ansible.env.yaml"
        name: "{{ stack_name }}"
        parameters:
          desired_capacity: 1
          router: er01
        rollback: true
        state: present
        template: "{{ tmpdir.path }}/server-asg.hot.yaml"
      register: stack_reg
    # - ansible.builtin.debug: {var: stack_reg}

    - name: OpenStack server list
      openstack.cloud.server_info:
        cloud: "{{ cloud }}"
        filters:
          metadata:
            "metering.server_group": "{{ stack_reg.stack.id }}"
      register: servers_reg
    # - ansible.builtin.debug: {var: servers_reg}

    - name: Add hosts to inventory
      ansible.builtin.add_host:
        groups:
          - all
          - microk8s
          - stack_{{ stack_reg.stack.name }}
        name: "{{ item.name }}"
        ansible_host: "{{ item.access_ipv4 }}"
      with_items: "{{ servers_reg.servers }}"


- name: Configure server hosts
  hosts: "stack_{{ stack_name }},&microk8s"
  become: true
  handlers: []
  pre_tasks: []
  roles:
    - role: microk8s
      when: inventory_hostname in groups["microk8s"]
  tasks: []
  post_tasks: []
