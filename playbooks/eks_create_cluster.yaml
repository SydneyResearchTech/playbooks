---
# collection/playbooks/eks_create_cluster.yaml
# ansible-playbook -e 'cluster_name=restek-dev' restek.core.eks_create_cluster
# python3 -m pip install kubernetes
#
- name: AWS EKS create cluster
  hosts: localhost
  become: false
  connection: local
  vars:
    addons:
      - vpc-cni
      - aws-ebs-csi-driver
      - aws-efs-csi-driver
      - snapshot-controller
      # - aws-mountpoint-s3-csi-driver
      # - amazon-cloudwatch-observability
    aws_profile: default
    calico_cidr: "100.10.0.0/10"
    calico_enabled: false
    clobber: false
    # cluster_name: ansible-template
    karpenter_namespace: kube-system
    karpenter_version: "0.37.0"
    kubernetes_version: "1.29"
    vpc_cidr: "192.168.0.0/16"

  pre_tasks:
    - name: Mandatory variables?
      ansible.builtin.assert:
        that:
          - cluster_name is defined and cluster_name is regex("^[a-z0-9][a-z0-9-]+")

  roles: []

  tasks:
    - name: Get AWS region
      ansible.builtin.command:
        cmd: aws configure get region
      changed_when: false
      register: region_output

    - name: Get AWS account ID
      ansible.builtin.command:
        cmd: aws sts get-caller-identity --profile {{ aws_profile }} --output text --query 'Account'
      changed_when: false
      register: aws_account_id_output
        # - ansible.builtin.debug: {var: aws_account_id_output}

    - name: AWS KMS create key
      amazon.aws.kms_key:
        alias: eks-secrets-{{ cluster_name }}
        description: EKS secrets encryption for cluster {{ cluster_name }}
        key_spec: SYMMETRIC_DEFAULT
        key_usage: ENCRYPT_DECRYPT
        profile: "{{ aws_profile }}"
        state: present
        tags:
          alpha.eksctl.io/cluster-name: "{{ cluster_name }}"
          eksctl.cluster.k8s.io/v1alpha1/cluster-name: "{{ cluster_name }}"
          sydney.edu.au/ou: Research Technology
          sydney.edu.au/resTek/createBy: dean.taylor@sydney.edu.au
      register: kms_key_output
        # - ansible.builtin.debug: {var: kms_key_output}

    - name: Set facts
      ansible.builtin.set_fact:
        account_id: "{{ aws_account_id_output.stdout }}"
        flux_dir: "{{ (lookup('ansible.builtin.env', 'HOME'), 'flux') | path_join }}"
        key_arn: "{{ kms_key_output.key_arn }}"
        region: "{{ region_output.stdout }}"

    # https://karpenter.sh/v0.37/getting-started/getting-started-with-karpenter/
    - name: Get karpenter provider cfn
      ansible.builtin.uri:
        force: true
        return_content: true
        url: "https://raw.githubusercontent.com/aws/karpenter-provider-aws\
              /v{{ karpenter_version }}\
              /website/content/en/preview/getting-started/getting-started-with-karpenter/cloudformation.yaml"
      register: karpenter_cfn_output

    - name: Karpenter cloudformation deploy
      amazon.aws.cloudformation:
        capabilities: ["CAPABILITY_NAMED_IAM"]
        on_create_failure: DELETE
        profile: "{{ aws_profile }}"
        stack_name: Karpenter-{{ cluster_name }}
        state: present
        tags:
          alpha.eksctl.io/cluster-name: "{{ cluster_name }}"
          eksctl.cluster.k8s.io/v1alpha1/cluster-name: "{{ cluster_name }}"
          sydney.edu.au/ou: Research Technology
          sydney.edu.au/resTek/createBy: dean.taylor@sydney.edu.au
        template_body: "{{ karpenter_cfn_output.content }}"
        template_parameters:
          ClusterName: "{{ cluster_name }}"
      when:
        - karpenter_cfn_output.status == 200

    - name: Create EKS cluster template file
      ansible.builtin.template:
        backup: true
        dest: "{{ flux_dir }}/clusters/{{ cluster_name }}.eks.yaml"
        lstrip_blocks: true
        mode: "0644"
        src: template.eks.yaml.j2

    - name: Get EKS cluster SG
      amazon.aws.ec2_security_group_info:
        filters:
          group_name: "eks-cluster-sg-{{ cluster_name }}-*"
          "tag:aws:eks:cluster-name": "{{ cluster_name }}"
        profile: "{{ aws_profile }}"
      register: cluster_sg_output
        # - ansible.builtin.debug: {var: cluster_sg_output}

    - name: Get EKS cluster subnets
      amazon.aws.ec2_vpc_subnet_info:
        filters:
          "tag:eksctl.cluster.k8s.io/v1alpha1/cluster-name": "{{ cluster_name }}"
          "tag:kubernetes.io/role/elb": 1
        profile: "{{ aws_profile }}"
      register: cluster_sn_output
        # - ansible.builtin.debug: {var: cluster_sn_output}

    - name: Post EKS cluster creation
      when:
        - cluster_sg_output.security_groups | length > 0
        - cluster_sn_output.subnets | length > 0
      block:
        - name: GitOps directory creation
          ansible.builtin.file:
            mode: "0755"
            path: "{{ flux_dir }}/{{ item }}"
            state: directory
          with_items:
            - infrastructure/{{ cluster_name }}
            - infrastructure/{{ cluster_name }}/secrets
            - apps/{{ cluster_name }}

        - name: Get kubectl config
          ansible.builtin.command:
            cmd: >
              aws eks update-kubeconfig --name {{ cluster_name }}
              --profile {{ aws_profile }}
              --kubeconfig /dev/null --dry-run
          register: kubeconfig_output
          changed_when: false

        - name: Secret encryption?
          ansible.builtin.stat:
            path: "{{ flux_dir }}/infrastructure/{{ cluster_name }}/.sops.yaml"
          register: sops_output

        - name: Secret configuration
          when:
            - not sops_output.stat.exists
          block:
            - name: Generate age key
              ansible.builtin.command:
                cmd: age-keygen
              register: agekey_output
              changed_when: false
                # - ansible.builtin.debug: {var: agekey_output}

            - name: Age secret
              kubernetes.core.k8s:
                apply: true
                kubeconfig: "{{ kubeconfig_output.stdout | from_yaml }}"
                resource_definition:
                  apiVersion: v1
                  kind: Secret
                  metadata:
                    name: sops-age
                    namespace: flux-system
                  data:
                    age.agekey: "{{ agekey_output.stdout | b64encode }}"
                state: present

            - name: Set Facts
              ansible.builtin.set_fact:
                agekey_public: "{{ agekey_output.stdout | regex_search('public key: (.*)$', '\\1',  multiline=True) | first }}"

            - name: SOPS configuration
              ansible.builtin.copy:
                content: |
                  creation_rules:
                  - path_regex: .*.ya?ml
                    encrypted_regex: '^(data|stringData)$'
                    age: >-
                      {{ agekey_public }}
                dest: "{{ flux_dir }}/{{ item }}"
                mode: "0644"
              with_items:
                - infrastructure/{{ cluster_name }}/.sops.yaml
                - apps/{{ cluster_name }}/.sops.yaml

        - name: Get EFS cfn
          ansible.builtin.uri:
            return_content: true
            url: https://raw.githubusercontent.com/SydneyResearchTech/cfn-templates/main/efs.cfn.yml
          register: efs_cfn_output

        - name: EFS deployment
          amazon.aws.cloudformation:
            on_create_failure: DELETE
            profile: "{{ aws_profile }}"
            stack_name: eks-{{ cluster_name }}-efs-csi
            state: present
            tags:
              alpha.eksctl.io/cluster-name: "{{ cluster_name }}"
              eksctl.cluster.k8s.io/v1alpha1/cluster-name: "{{ cluster_name }}"
              sydney.edu.au/ou: Research Technology
              sydney.edu.au/resTek/createBy: dean.taylor@sydney.edu.au
            template_body: "{{ efs_cfn_output.content }}"
            template_parameters:
              VpcId: "{{ cluster_sg_output.security_groups.0.vpc_id }}"
              SecurityGroupId: "{{ cluster_sg_output.security_groups.0.group_id }}"
              SubnetId1: "{{ cluster_sn_output.subnets.0.id }}"
              SubnetId2: "{{ cluster_sn_output.subnets.1.id }}"
              SubnetId3: "{{ cluster_sn_output.subnets.2.id }}"
          when:
            - efs_cfn_output.status == 200
          register: efs_output
            # - ansible.builtin.debug: {var: efs_output}

        - name: Set Facts
          ansible.builtin.set_fact:
            efs_file_system_id: "{{ efs_output.stack_outputs.FileSystemId }}"

        - name: Flux cluster secrets
          ansible.builtin.template:
            backup: true
            dest: "{{ flux_dir }}/clusters/{{ cluster_name }}/secrets.yaml"
            force: "{{ clobber }}"
            lstrip_blocks: true
            mode: "0644"
            src: flux/clusters/secrets.yaml.j2

        - name: Flux cluster infrastructure
          ansible.builtin.template:
            backup: true
            dest: "{{ flux_dir }}/clusters/{{ cluster_name }}/infrastructure.yaml"
            force: "{{ clobber }}"
            lstrip_blocks: true
            mode: "0644"
            src: flux/clusters/infrastructure.yaml.j2

        - name: Flux cluster applications
          when:
            - 0 > 1
          ansible.builtin.template:
            backup: true
            dest: "{{ flux_dir }}/clusters/{{ cluster_name }}/apps.yaml"
            force: "{{ clobber }}"
            lstrip_blocks: true
            mode: "0644"
            src: flux/clusters/apps.yaml.j2

        - name: Flux cluster notifications
          when:
            - 0 > 1
          ansible.builtin.template:
            backup: true
            dest: "{{ flux_dir }}/clusters/{{ cluster_name }}/notification.yaml"
            force: "{{ clobber }}"
            lstrip_blocks: true
            mode: "0644"
            src: flux/clusters/notification.yaml.j2

  post_tasks: []
  handlers: []
